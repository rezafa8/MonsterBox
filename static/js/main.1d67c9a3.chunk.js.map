{"version":3,"sources":["../../MonsterBox/src/component/Card/Card.jsx","../../MonsterBox/src/component/CardList/CardList.jsx","../../MonsterBox/src/component/SearchBox/SearchBox.jsx","../../MonsterBox/src/App.js","../../MonsterBox/src/reportWebVitals.js","../../MonsterBox/src/index.js"],"names":["Card","props","react_default","a","createElement","className","alt","src","concat","monster","id","name","email","address","city","CardList","monsters","map","Card_Card_Card","key","SearchBox","_ref","placeholder","handleChange","type","onChange","App","_this","Object","classCallCheck","this","_super","call","e","setState","searchField","target","value","state","_this2","fetch","then","response","json","users","_this$state","filteredMonsters","filter","toLowerCase","includes","SearchBox_SearchBox_SearchBox","CardList_CardList_CardList","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"2SAGaA,eAAO,SAAAC,GAAK,OACrBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,UAAUC,IAAG,wBAAAC,OAA0BP,EAAMQ,QAAQC,GAAxC,2BACtBR,EAAAC,EAAAC,cAAA,cAAMH,EAAMQ,QAAQE,KAApB,KACAT,EAAAC,EAAAC,cAAA,cAAMH,EAAMQ,QAAQG,OACpBV,EAAAC,EAAAC,cAAA,cAAMH,EAAMQ,QAAQI,QAAQC,SCJvBC,EAAW,SAAAd,GAAK,OACzBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACVJ,EAAMe,SAASC,IAAI,SAAAR,GAAO,OACvBP,EAAAC,EAAAC,cAACc,EAAD,CAAMC,IAAKV,EAAQC,GAAID,QAASA,QCH/BW,eAAY,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,YAAaC,EAAhBF,EAAgBE,aAAhB,OACrBrB,EAAAC,EAAAC,cAAA,SACIC,UAAU,SACVmB,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCoCHG,oDAvCb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAI,EAAAC,KAAAF,OAcFP,aAAe,SAAAU,GACbN,EAAKO,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAdtCV,EAAKW,MAAQ,CACXtB,SAAU,GACVmB,YAAa,IAJHR,uDAQd,WAAoB,IAAAY,EAAAT,KAClBU,MAAM,8CACHC,KAAK,SAAAC,GAAQ,OACZA,EAASC,SACVF,KAAK,SAAAG,GAAK,OAAIL,EAAKL,SAAS,CAAElB,SAAU4B,4BAO7C,WACE,IAAAC,EAAkCf,KAAKQ,MAA/BtB,EAAR6B,EAAQ7B,SAAUmB,EAAlBU,EAAkBV,YACZW,EAAmB9B,EAAS+B,OAAO,SAAAtC,GAAO,OAC9CA,EAAQE,KAAKqC,cAAcC,SAASd,EAAYa,iBAElD,OACE9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAC8C,EAAD,CACE5B,YAAY,kBACZC,aAAcO,KAAKP,eACrBrB,EAAAC,EAAAC,cAAC+C,EAAD,CAAUnC,SAAU8B,YA/BVM,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAvB,EAAA,GAAAQ,KAAAe,EAAAC,KAAA,UAAqBhB,KAAK,SAAApB,GAAiD,IAA9CqC,EAA8CrC,EAA9CqC,OAAQC,EAAsCtC,EAAtCsC,OAAQC,EAA8BvC,EAA9BuC,OAAQC,EAAsBxC,EAAtBwC,OAAQC,EAAczC,EAAdyC,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDdS,IAASC,OACP9D,EAAAC,EAAAC,cAACF,EAAAC,EAAM8D,WAAP,KACE/D,EAAAC,EAAAC,cAAC8D,EAAD,OAEFC,SAASC,eAAe,SAM1Bf","file":"static/js/main.1d67c9a3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './Card.css'\r\n\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n        <img alt='monster' src={`https://robohash.org/${props.monster.id}set=set2&size=180x180`} />\r\n        <h2> {props.monster.name} </h2>\r\n        <h2> {props.monster.email}</h2>\r\n        <h2> {props.monster.address.city}</h2>\r\n\r\n    </div>\r\n)\r\n\r\n","import React from 'react';\r\nimport './CardList.css'\r\nimport { Card } from '../Card/Card.jsx'\r\n\r\nexport const CardList = props => (\r\n    <div className='CardList'>\r\n        {props.monsters.map(monster => (\r\n            <Card key={monster.id} monster={monster} />\r\n        ))}\r\n    </div>\r\n);\r\n\r\nexport default CardList;","import React from \"react\";\r\n\r\nimport './SearchBox.css'\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input\r\n        className='search'\r\n        type='search'\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />\r\n\r\n)\r\n\r\n","import { CardList } from './component/CardList/CardList'\nimport './App.css';\nimport React, { Component } from 'react';\nimport { SearchBox } from './component/SearchBox/SearchBox';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response =>\n        response.json())\n      .then(users => this.setState({ monsters: users }))\n  }\n\n  handleChange = e => {\n    this.setState({ searchField: e.target.value })\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n    return (\n      <div className=\"App\">\n        <h1> Monster Box </h1>\n        <SearchBox\n          placeholder='search monsters'\n          handleChange={this.handleChange} />\n        <CardList monsters={filteredMonsters} />\n\n      </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}